[project]
name = "dpm-toolkit"
version = "0.0.0"
description = "Open-source tools and models for working with DPM databases"
authors = [{ name = "Jim Lundin", email = "jimeriklundin@gmail.com" }]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">= 3.13"

dependencies = ["archive", "typer>=0.16.1"]

[project.scripts]
dpm-toolkit = "dpm_toolkit.cli:main"

[project.optional-dependencies]
scrape = ["scrape"]
migrate = ["migrate"]
schema = ["schema"]
compare = ["compare"]

[tool.ruff]
unsafe-fixes = true

[tool.ruff.lint]
fixable = ["ALL"]
select = ["ALL"]
ignore = ["T201"]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = [
    "S101",    # asserts allowed in tests...
    "ARG",     # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT",     # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    "PLR2004", # Magic value used in comparison, ...
    "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
]

[tool.mypy]
strict = true

[tool.pyright]
typeCheckingMode = "strict"

[tool.pyrefly]

[build-system]
requires = ["uv_build"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "pytest>=8.4.1",
    "ruff>=0.11.4",
    "ty>=0.0.1a15",
    "pyright>=1.1.0",
    "types-beautifulsoup4>=4.12.0.20250204",
    "types-requests>=2.32.0.20250328",
    "pyrefly>=0.32.0",
]

[tool.pytest.ini_options]
testpaths = ["projects/*/tests", "tests"]
addopts = ["--strict-markers", "--verbose"]

[tool.uv.workspace]
members = ["projects/*"]

[tool.uv.sources]
archive = { workspace = true }
migrate = { workspace = true }
scrape = { workspace = true }
schema = { workspace = true }
compare = { workspace = true }
dpm2 = { workspace = true }
