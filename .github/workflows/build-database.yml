name: Build Database

on:
  workflow_call:
    inputs:
      version_id:
        description: 'The version ID to build.'
        required: true
        type: string

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Install UV
      uses: astral-sh/setup-uv@v5
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version-file: 'pyproject.toml'
    
    - name: Install project
      run: uv sync --extra convert --dev

    - name: Cache Access Database Engine
      id: cache-access-engine
      uses: actions/cache@v4
      with:
        path: AccessDatabaseEngine.exe
        key: access-db-engine-2016-x64

    - name: Download Microsoft Access Database Engine
      if: steps.cache-access-engine.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        $url = "https://download.microsoft.com/download/3/5/C/35C84C36-661A-44E6-9324-8786B8DBE231/accessdatabaseengine_X64.exe"
        Invoke-WebRequest -Uri $url -OutFile "AccessDatabaseEngine.exe"

    - name: Install Microsoft Access Database Engine
      shell: powershell
      run: |
        Start-Process -FilePath "AccessDatabaseEngine.exe" -ArgumentList "/quiet" -Wait
    
    - name: Cache downloaded databases
      id: cache-dbs
      uses: actions/cache@v4
      with:
        path: |
          **/*.accdb
        key: ${{ inputs.version_id }}

    - name: Download database files
      if: steps.cache-dbs.outputs.cache-hit != 'true'
      shell: bash
      run: |
        uv run opendpm download -v ${{ inputs.version_id }}

    - name: Convert to SQLite database
      shell: bash
      run: |
        uv run opendpm convert
        
    - name: Format generated models with ruff
      shell: bash
      run: |
        uv run ruff format
        uv run ruff check --fix-only
        uv run ruff format

    - name: Type check generated models using mypy
      shell: bash
      run: |
        uv run mypy .

    - name: Type check generated models using ty (ignore errors)
      shell: bash
      run: |
        uv run ty check --exit-zero

    - name: Upload SQLite database artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.version_id }}
        path: |
          dpm.sqlite
          dpm.py
