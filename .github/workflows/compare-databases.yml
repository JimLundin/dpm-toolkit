name: Compare Database Versions

on:
  workflow_call:
    inputs:
      old_version:
        description: "The older version to compare from"
        required: true
        type: string
      new_version:
        description: "The newer version to compare to"
        required: true
        type: string
      output_format:
        description: "Output format (table, json, html)"
        required: false
        type: string
        default: "json"
    outputs:
      comparison_artifact_name:
        description: "The name of the uploaded artifact containing the comparison results"
        value: ${{ jobs.compare.outputs.artifact_name }}

  workflow_dispatch:
    inputs:
      old_version:
        description: "The older version to compare from"
        required: true
        type: string
        default: "4.0-release"
      new_version:
        description: "The newer version to compare to"
        required: true
        type: string
        default: "4.1-final"
      output_format:
        description: "Output format"
        required: false
        type: choice
        options:
          - table
          - json
          - html
        default: "json"

jobs:
  download-old:
    uses: ./.github/workflows/download-database.yml
    with:
      version_id: ${{ inputs.old_version }}
      database_type: "converted"

  download-new:
    uses: ./.github/workflows/download-database.yml
    with:
      version_id: ${{ inputs.new_version }}
      database_type: "converted"

  compare:
    needs: [download-old, download-new]
    runs-on: ubuntu-latest
    outputs:
      artifact_name: database-comparison-${{ inputs.old_version }}-to-${{ inputs.new_version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Set up Python
        run: uv python install

      - name: Install dependencies
        run: uv sync --extra compare

      - name: Download old version artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.download-old.outputs.artifact_name }}
          path: ./old-db/

      - name: Download new version artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.download-new.outputs.artifact_name }}
          path: ./new-db/

      - name: Find database files
        id: find-dbs
        run: |
          OLD_DB=$(find ./old-db -name "*.sqlite" | head -1)
          NEW_DB=$(find ./new-db -name "*.sqlite" | head -1)
          if [[ -z "$OLD_DB" ]]; then
            echo "Error: No .sqlite file found in ./old-db" >&2
            exit 1
          fi
          if [[ -z "$NEW_DB" ]]; then
            echo "Error: No .sqlite file found in ./new-db" >&2
            exit 1
          fi
          echo "old_db=$OLD_DB" >> $GITHUB_OUTPUT
          echo "new_db=$NEW_DB" >> $GITHUB_OUTPUT
          echo "Found old database: $OLD_DB"
          echo "Found new database: $NEW_DB"

      - name: Run database comparison
        run: |
          mkdir -p comparison-results

          # Generate comparison report
          uv run dpm-toolkit compare \
            "${{ steps.find-dbs.outputs.old_db }}" \
            "${{ steps.find-dbs.outputs.new_db }}" \
            --output-format ${{ inputs.output_format }} \
            > comparison-results/comparison-report.${{ inputs.output_format }}

      - name: Upload comparison results
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: database-comparison-${{ inputs.old_version }}-to-${{ inputs.new_version }}
          path: comparison-results/
          retention-days: 30
